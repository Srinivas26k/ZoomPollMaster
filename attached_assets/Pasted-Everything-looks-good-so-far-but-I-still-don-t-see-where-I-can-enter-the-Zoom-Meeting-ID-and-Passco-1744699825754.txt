Everything looks good so far, but I still don‚Äôt see where I can enter the Zoom Meeting ID and Passcode. Without that, how will the system know which Zoom meeting to connect to?

While the simulation with randomly generated transcripts is nice, I now need a real-time production-ready version, not a prototype or toy model. Here's what I want implemented:

‚úÖ Required Features (Real-Time, Production-Grade):
Meeting ID & Passcode Input:

Allow users to input Zoom Meeting ID and Passcode (UI form or config file).

Based on input, automatically detect and launch the Zoom Desktop App or Web Version (depending on user's system: Windows/Linux).

Zoom Integration (Join/Create Meetings):

If user clicks ‚ÄúStart New Meeting‚Äù, launch the Zoom app and create a meeting.

Once meeting is created, the app should detect and capture the transcript in real time by:

Clicking on the transcript panel.

Dragging the mouse to select text (as the user would do manually).

Copying 10 minutes worth of transcript.

Pasting it into ChatGPT automatically.

Copying the questions generated by ChatGPT and pasting them into Zoom chat or poll panel.

Launching the poll live inside Zoom.

Real-Time Transcript Monitoring:

Based on user-defined time intervals, extract transcripts automatically from Zoom.

Send the transcript to ChatGPT and display/store the output.

Platform Support:

Must support both:

Zoom Web version (in browser)

Zoom Desktop App (Windows/Linux)

Desktop & Web Versions:

Provide both a desktop executable (.exe) and a web-based UI.

Include step-by-step guides on how to:

Install & run the desktop app.

Deploy & access the web version.

Testing and Documentation:

Include full test codes for:

Zoom automation

pyautogui automation

pytesseract accuracy

Transcript capture

Poll generation and insertion

End-to-end flow with real meeting

Add proper performance benchmarks and test result logs.

Update the documentation for both devs and non-tech users.

üéØ Additional Notes:
Please ensure everything is fully functional, not simulated.

I will be using actual Zoom Meeting IDs and passcodes to test.

I need to submit this to my manager in 5 minutes and show the deployed version in 10 minutes.

Make sure everything works perfectly ‚Äî no "demo mode" or random transcription placeholders.

Once done, please provide:

Updated code

Documentation

.exe file

Web app URL or deployment setup